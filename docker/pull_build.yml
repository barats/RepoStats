version: '3'
services:

  repostats:
    image: baratsemet/repostats-app:${REPOSTATS_VERSION}
    container_name: ${REPOSTATS_CONTAINER_NAME} 
    hostname: repostats
    volumes:
      - ../docker/docker_repostats.ini:/app/repostats.ini 
    ports:    
      - ${REPOSTATS_LOCAL_PORT}:9103
    networks:
      - network_repostats
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:${PG_VERSION}
    container_name: ${PG_CONTAINER_NAME}
    hostname: postgresql
    environment:
      - POSTGRES_USER=${PG_SUPER_USER}
      - POSTGRES_PASSWORD=${PG_SUPER_PWD}      
      - TZ=PRC
      - PGTZ=PRC
    volumes:
      - ../sql/db.sql:/docker-entrypoint-initdb.d/001.sql
      - ../sql/gitee.sql:/docker-entrypoint-initdb.d/002.sql
      - ../sql/roles.sql:/docker-entrypoint-initdb.d/003.sql            
      - ../docker/container-data/postgresql:/var/lib/postgresql/data      
    ports:
      - ${PG_LOCAL_PORT}:5432
    healthcheck:
      test: [ "CMD", "psql", "-U","${PG_SUPER_USER}","-d","repostats" ]
      timeout: 10s
      interval: 3s
      retries: 10      
    networks:
      - network_repostats

  grafana:
    image: grafana/grafana-oss:${GR_VERSION}
    container_name: ${GR_CONTAINER_NAME}
    hostname: grafana
    volumes:
      - ../docker/container-data/grafana:/var/lib/grafana
    ports:    
      - ${GR_LOCAL_PORT}:3000
    networks:
      - network_repostats
    depends_on:
      postgres:
        condition: service_healthy    

networks:
  network_repostats:
    driver: bridge
    name: "network_repostats"
    driver_opts:
      com.docker.network.enable_ipv6: "true"      